//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp5.MESwebservice {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/MesServiceKS/Boards/", ConfigurationName="MESwebservice.BoardsSoap")]
    public interface BoardsSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBoxData(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBoxDataAsync(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ShippingReport(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ShippingReportAsync(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReportRenesola", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ShippingReportRenesola(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReportRenesola", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ShippingReportRenesolaAsync(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReport_2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ShippingReport_2(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReport_2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ShippingReport_2Async(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBatchHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBatchHeader(string BatchNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBatchHeader", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBatchHeaderAsync(string BatchNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/TransformString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransformString(string pSourceValue, string pFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/TransformString", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransformStringAsync(string pSourceValue, string pFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_ContainerData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HANWHA_ContainerData(string pstrCustomer, string palletNo, string sSO_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_ContainerData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HANWHA_ContainerDataAsync(string pstrCustomer, string palletNo, string sSO_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMaterialData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMaterialData(string MaterialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMaterialData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMaterialDataAsync(string MaterialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_StockEDIReport_Day", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HANWHA_StockEDIReport_Day(string pstrCustomer, string PalletList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_StockEDIReport_Day", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HANWHA_StockEDIReport_DayAsync(string pstrCustomer, string PalletList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_EDIReport_Day", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HANWHA_EDIReport_Day(string pstrCustomer, string PalletList, long LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_EDIReport_Day", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HANWHA_EDIReport_DayAsync(string pstrCustomer, string PalletList, long LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_ProductionEDIReport_Day", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HANWHA_ProductionEDIReport_Day(string pstrCustomer, string pstrSourceFileName, string pstrSourcePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_ProductionEDIReport_Day", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HANWHA_ProductionEDIReport_DayAsync(string pstrCustomer, string pstrSourceFileName, string pstrSourcePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxContentsWithMeasuredData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBoxContentsWithMeasuredData(string pCustomer, string pBoxNo, string pMeasuredLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxContentsWithMeasuredData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBoxContentsWithMeasuredDataAsync(string pCustomer, string pBoxNo, string pMeasuredLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/RENESOLA_EDIReport_Day", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet RENESOLA_EDIReport_Day(string pstrCustomer, string BoxesList, int LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/RENESOLA_EDIReport_Day", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> RENESOLA_EDIReport_DayAsync(string pstrCustomer, string BoxesList, int LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBoardHeader(string CustomerName, string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHeader", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBoardHeaderAsync(string CustomerName, string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/VerifySetupSheetDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerifySetupSheetDS(string AssemblyID, string RouteStepID, string EquipmentID, string SetupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/VerifySetupSheetDS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> VerifySetupSheetDSAsync(string AssemblyID, string RouteStepID, string EquipmentID, string SetupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/VerifySetupSheet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifySetupSheet(int AssemblyID, int RouteStepID, int EquipmentID, int SetupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/VerifySetupSheet", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifySetupSheetAsync(int AssemblyID, int RouteStepID, int EquipmentID, int SetupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetGRNData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetGRNData(string GRNNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetGRNData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetGRNDataAsync(string GRNNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetQtyByBatchRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetQtyByBatchRouteStep(string BatchNumber, string RouteStepName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetQtyByBatchRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetQtyByBatchRouteStepAsync(string BatchNumber, string RouteStepName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetQtyByBatchRouteStepSum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetQtyByBatchRouteStepSum(string BatchNumber, string RouteStepName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetQtyByBatchRouteStepSum", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetQtyByBatchRouteStepSumAsync(string BatchNumber, string RouteStepName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListCRDMaterials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListCRDMaterials(int AssemblyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListCRDMaterials", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListCRDMaterialsAsync(int AssemblyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListNotFullyBoxes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListNotFullyBoxes(string pCustomer, string pAssemblyNo, string pAssemblyRev, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListNotFullyBoxes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListNotFullyBoxesAsync(string pCustomer, string pAssemblyNo, string pAssemblyRev, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListBoxLineNumbers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListBoxLineNumbers(string pCustomer, string pBoxNo, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListBoxLineNumbers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListBoxLineNumbersAsync(string pCustomer, string pBoxNo, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListPanelsBoards", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListPanelsBoards(int pCustomerID, string pSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListPanelsBoards", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListPanelsBoardsAsync(int pCustomerID, string pSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCustomerData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCustomerData(string pCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCustomerData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDataAsync(string pCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ProcessVerify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ProcessVerify(string pCustomer, string pSerialNumber, string pCheckPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ProcessVerify", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ProcessVerifyAsync(string pCustomer, string pSerialNumber, string pCheckPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListUsersByGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListUsersByGroup(string pGroupName, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListUsersByGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListUsersByGroupAsync(string pGroupName, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CreateSerialNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateSerialNumber(int pCustomerID, string pSerialNumberName, string pSerialQuantity, string pAssemblyID, string pSerialSeparator, string pTestOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CreateSerialNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateSerialNumberAsync(int pCustomerID, string pSerialNumberName, string pSerialQuantity, string pAssemblyID, string pSerialSeparator, string pTestOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPalletBoxesContents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPalletBoxesContents(int pCustomerID, string PalletNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPalletBoxesContents", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPalletBoxesContentsAsync(int pCustomerID, string PalletNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAllCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAllCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckSN(string Customer, string Assembly_NR, string Assembly_REV, string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSN", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckSNAsync(string Customer, string Assembly_NR, string Assembly_REV, string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastAssemblyIDByRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLastAssemblyIDByRouteStep(string pstrRouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastAssemblyIDByRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLastAssemblyIDByRouteStepAsync(string pstrRouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLastTest(string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastTest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLastTestAsync(string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastTestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLastTestData(string pSerialNumber, string pServerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastTestData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLastTestDataAsync(string pSerialNumber, string pServerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetDateTimeFromDataBase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDateTimeFromDataBase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetDateTimeFromDataBase", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDateTimeFromDataBaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestHistoryByDateTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTestHistoryByDateTime(string pCustomerID, string pSerialNumber, string pFromDate, string pToDate, string pRouteStepIDList, string pServerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestHistoryByDateTime", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTestHistoryByDateTimeAsync(string pCustomerID, string pSerialNumber, string pFromDate, string pToDate, string pRouteStepIDList, string pServerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetDataLabelsBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDataLabelsBySerialNo(string pCustomerName, string pSerialNumber, string pDataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetDataLabelsBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDataLabelsBySerialNoAsync(string pCustomerName, string pSerialNumber, string pDataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTestHistory(string pCustomerName, string pSerialNumber, string pTestList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTestHistoryAsync(string pCustomerName, string pSerialNumber, string pTestList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestsBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTestsBySerialNo(string pSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestsBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTestsBySerialNoAsync(string pSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHistoryDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBoardHistoryDS(string CustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHistoryDS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBoardHistoryDSAsync(string CustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetHistoryByWipsDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHistoryByWipsDS(string pWipsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetHistoryByWipsDS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHistoryByWipsDSAsync(string pWipsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSerialNumberByCheckpoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckSerialNumberByCheckpoint(string pCustomer, string pCheckPoint, string pSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSerialNumberByCheckpoint", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckSerialNumberByCheckpointAsync(string pCustomer, string pCheckPoint, string pSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Service_Status", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Service_Status(int sec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Service_Status", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Service_StatusAsync(int sec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Test", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Test", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetParserData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetParserData(string CustomerName, string pstrSerialNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetParserData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetParserDataAsync(string CustomerName, string pstrSerialNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFamilyByAssemblyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetFamilyByAssemblyID(string pstrAssemblyID, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFamilyByAssemblyID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetFamilyByAssemblyIDAsync(string pstrAssemblyID, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFamilyByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetFamilyByCustomer(string pstrCustomerText, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFamilyByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetFamilyByCustomerAsync(string pstrCustomerText, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckAnalyze", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckAnalyze(string pstrSerialNo, string pSep, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckAnalyze", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckAnalyzeAsync(string pstrSerialNo, string pSep, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRoutesByMA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetRoutesByMA(string MA_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRoutesByMA", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetRoutesByMAAsync(string MA_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAssemblyData(string pCustomer, string pAssemblylNo, string pAssemblyRev);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAssemblyDataAsync(string pCustomer, string pAssemblylNo, string pAssemblyRev);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEquipmentList(string pCustomerName, string pCommonName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEquipmentListAsync(string pCustomerName, string pCommonName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRouteStepData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRouteStepData(string pRouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRouteStepData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRouteStepDataAsync(string pRouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRouteDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAssembliesByRouteDS(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRouteDS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAssembliesByRouteDSAsync(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAssembliesByRoute(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRoute", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAssembliesByRouteAsync(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRouteByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAssembliesByRouteByCustomer(string RouteID, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRouteByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAssembliesByRouteByCustomerAsync(string RouteID, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentByRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetEquipmentByRouteStep(string RouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentByRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetEquipmentByRouteStepAsync(string RouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRouteStepsByRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetRouteStepsByRoute(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRouteStepsByRoute", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetRouteStepsByRouteAsync(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEquipmentData(string pEquipmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEquipmentDataAsync(string pEquipmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByLinkedMaterials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetSerialNoByLinkedMaterials(string pstrCustomer, string pLinkObject, string pLinkedNumber, int pLinkUnlink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByLinkedMaterials", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetSerialNoByLinkedMaterialsAsync(string pstrCustomer, string pLinkObject, string pLinkedNumber, int pLinkUnlink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEPSLinkedSerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetEPSLinkedSerialNo(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEPSLinkedSerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetEPSLinkedSerialNoAsync(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLinkedValue(string pstrCustomer, string pstrSerialNo, string pstrLinkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedValue", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLinkedValueAsync(string pstrCustomer, string pstrSerialNo, string pstrLinkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedValueDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLinkedValueDS(string pstrCustomer, string pstrSerialNo, string pstrLinkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedValueDS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLinkedValueDSAsync(string pstrCustomer, string pstrSerialNo, string pstrLinkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedMaterials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetLinkedMaterials(string pstrCustomer, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedMaterials", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetLinkedMaterialsAsync(string pstrCustomer, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByShipOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSerialNoByShipOrder(string pstrCustomer, string pstrOrderNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByShipOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSerialNoByShipOrderAsync(string pstrCustomer, string pstrOrderNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByBox", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSerialNoByBox(string pstrCustomer, string pstrBoxNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByBox", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSerialNoByBoxAsync(string pstrCustomer, string pstrBoxNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoForBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetSerialNoForBatch(string pstrBatchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoForBatch", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetSerialNoForBatchAsync(string pstrBatchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoForBatchDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSerialNoForBatchDS(string pstrBatchNo, string pMesRaportowy, string pOutputFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoForBatchDS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSerialNoForBatchDSAsync(string pstrBatchNo, string pMesRaportowy, string pOutputFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetWipCountByFamilyByRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetWipCountByFamilyByRouteStep(string FamilyID, string RouteStepID, string pDateFrom, string pDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetWipCountByFamilyByRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetWipCountByFamilyByRouteStepAsync(string FamilyID, string RouteStepID, string pDateFrom, string pDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCParamByBatchNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCParamByBatchNo(string BatchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCParamByBatchNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCParamByBatchNoAsync(string BatchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAssemblyNo(string CustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAssemblyNoAsync(string CustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyProperty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAssemblyProperty(string pAssemblyNo, string pAssemblyRev, string pPropertyKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyProperty", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAssemblyPropertyAsync(string pAssemblyNo, string pAssemblyRev, string pPropertyKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBatchBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBatchBySerialNo(string SerialNo, string Customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBatchBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBatchBySerialNoAsync(string SerialNo, string Customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetWipCountByAssemblyByRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetWipCountByAssemblyByRouteStep(string AssemblyID, string RouteStepID, string pDateFrom, string pDateTo, string pFirstEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetWipCountByAssemblyByRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetWipCountByAssemblyByRouteStepAsync(string AssemblyID, string RouteStepID, string pDateFrom, string pDateTo, string pFirstEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMAbyCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetMAbyCustomer(string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMAbyCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetMAbyCustomerAsync(string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAnalysisData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAnalysisData(string pCustomer, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAnalysisData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAnalysisDataAsync(string pCustomer, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMeasuredData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetMeasuredData(string CustomerName, string pstrSerialNo, string pstrDataLabel, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMeasuredData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetMeasuredDataAsync(string CustomerName, string pstrSerialNo, string pstrDataLabel, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMeasuredDataBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetMeasuredDataBySerialNo(string pCustomerName, string pstrSerialNo, string pstrDataLabel, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMeasuredDataBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetMeasuredDataBySerialNoAsync(string pCustomerName, string pstrSerialNo, string pstrDataLabel, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardAnalysis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBoardAnalysis(string CustomerName, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardAnalysis", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBoardAnalysisAsync(string CustomerName, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPalletContents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPalletContents(string pCustomer, string pstrDateFrom, string pstrDateTo, string pPalletStatus, string pAllEvents, string pShowBoards, string pstrFolderOut, string pSaveAs, string pFileExtension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPalletContents", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPalletContentsAsync(string pCustomer, string pstrDateFrom, string pstrDateTo, string pPalletStatus, string pAllEvents, string pShowBoards, string pstrFolderOut, string pSaveAs, string pFileExtension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckPalletByMeasuredDataByBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckPalletByMeasuredDataByBatch(string pCustomer, string pPalletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckPalletByMeasuredDataByBatch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckPalletByMeasuredDataByBatchAsync(string pCustomer, string pPalletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckPalletByMeasuredData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CheckPalletByMeasuredData(string pCustomer, string pPalletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckPalletByMeasuredData", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CheckPalletByMeasuredDataAsync(string pCustomer, string pPalletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CustomerLineStepReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CustomerLineStepReport(string pCustomer, string pFactory, string pstrManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pReportServer, string pSaveAs, string pStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CustomerLineStepReport", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CustomerLineStepReportAsync(string pCustomer, string pFactory, string pstrManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pReportServer, string pSaveAs, string pStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPackedData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPackedData(string pstrCustomer, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pSaveAs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPackedData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPackedDataAsync(string pstrCustomer, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pSaveAs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/WipCountByStepBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WipCountByStepBySerialNo(string pstrManArea, string pstrRoute, string pstrStep, string pstrSerialNo, string pProductionServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/WipCountByStepBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WipCountByStepBySerialNoAsync(string pstrManArea, string pstrRoute, string pstrStep, string pstrSerialNo, string pProductionServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CreateBackFlashSAP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateBackFlashSAP(string CustomerName, string pstrManArea, string pstrRoute, string pstrEquipment, string pstrFamily, string pstrDateFrom, string pstrDateTo, string pstrFolderOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CreateBackFlashSAP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateBackFlashSAPAsync(string CustomerName, string pstrManArea, string pstrRoute, string pstrEquipment, string pstrFamily, string pstrDateFrom, string pstrDateTo, string pstrFolderOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetListChangedBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetListChangedBatch(System.DateTime pDateFrom, string pExcludeCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetListChangedBatch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetListChangedBatchAsync(System.DateTime pDateFrom, string pExcludeCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFirstTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetFirstTest(string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFirstTest", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetFirstTestAsync(string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBoardData(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBoardDataAsync(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyDataByBoardDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAssemblyDataByBoardDS(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyDataByBoardDS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAssemblyDataByBoardDSAsync(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByLinkedData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSerialNoByLinkedData(int customerId, string dateFromString, string dateToString, int linkObjectId, string linkedValue, int uniqueLink, int showUnlinkedSn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByLinkedData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSerialNoByLinkedDataAsync(int customerId, string dateFromString, string dateToString, int linkObjectId, string linkedValue, int uniqueLink, int showUnlinkedSn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkObjectDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLinkObjectDS(string customer, string linkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkObjectDS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLinkObjectDSAsync(string customer, string linkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBoardHistory(string CustomerName, string pstrSerialNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBoardHistoryAsync(string CustomerName, string pstrSerialNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBoxHeader(string pCustomerName, string pstrBoxNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxHeader", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBoxHeaderAsync(string pCustomerName, string pstrBoxNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLineStepReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLineStepReport(string pCustomer, string pFactory, string pManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pStatus, string pReportServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLineStepReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLineStepReportAsync(string pCustomer, string pFactory, string pManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pStatus, string pReportServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBoxNumber(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBoxNumberAsync(string pCustomerName, string pstrSerialNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BoardsSoapChannel : WindowsFormsApp5.MESwebservice.BoardsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BoardsSoapClient : System.ServiceModel.ClientBase<WindowsFormsApp5.MESwebservice.BoardsSoap>, WindowsFormsApp5.MESwebservice.BoardsSoap {
        
        public BoardsSoapClient() {
        }
        
        public BoardsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BoardsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BoardsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BoardsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetBoxData(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetBoxData(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBoxDataAsync(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetBoxDataAsync(pCustomerName, pstrSerialNo);
        }
        
        public System.Data.DataSet ShippingReport(string pCustomer, int pLotID) {
            return base.Channel.ShippingReport(pCustomer, pLotID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ShippingReportAsync(string pCustomer, int pLotID) {
            return base.Channel.ShippingReportAsync(pCustomer, pLotID);
        }
        
        public System.Data.DataSet ShippingReportRenesola(string pCustomer, int pLotID) {
            return base.Channel.ShippingReportRenesola(pCustomer, pLotID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ShippingReportRenesolaAsync(string pCustomer, int pLotID) {
            return base.Channel.ShippingReportRenesolaAsync(pCustomer, pLotID);
        }
        
        public System.Data.DataSet ShippingReport_2(string pCustomer, int pLotID) {
            return base.Channel.ShippingReport_2(pCustomer, pLotID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ShippingReport_2Async(string pCustomer, int pLotID) {
            return base.Channel.ShippingReport_2Async(pCustomer, pLotID);
        }
        
        public System.Data.DataSet GetBatchHeader(string BatchNumber) {
            return base.Channel.GetBatchHeader(BatchNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBatchHeaderAsync(string BatchNumber) {
            return base.Channel.GetBatchHeaderAsync(BatchNumber);
        }
        
        public string TransformString(string pSourceValue, string pFormat) {
            return base.Channel.TransformString(pSourceValue, pFormat);
        }
        
        public System.Threading.Tasks.Task<string> TransformStringAsync(string pSourceValue, string pFormat) {
            return base.Channel.TransformStringAsync(pSourceValue, pFormat);
        }
        
        public System.Data.DataSet HANWHA_ContainerData(string pstrCustomer, string palletNo, string sSO_NO) {
            return base.Channel.HANWHA_ContainerData(pstrCustomer, palletNo, sSO_NO);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HANWHA_ContainerDataAsync(string pstrCustomer, string palletNo, string sSO_NO) {
            return base.Channel.HANWHA_ContainerDataAsync(pstrCustomer, palletNo, sSO_NO);
        }
        
        public System.Data.DataSet GetMaterialData(string MaterialName) {
            return base.Channel.GetMaterialData(MaterialName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMaterialDataAsync(string MaterialName) {
            return base.Channel.GetMaterialDataAsync(MaterialName);
        }
        
        public System.Data.DataSet HANWHA_StockEDIReport_Day(string pstrCustomer, string PalletList) {
            return base.Channel.HANWHA_StockEDIReport_Day(pstrCustomer, PalletList);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HANWHA_StockEDIReport_DayAsync(string pstrCustomer, string PalletList) {
            return base.Channel.HANWHA_StockEDIReport_DayAsync(pstrCustomer, PalletList);
        }
        
        public System.Data.DataSet HANWHA_EDIReport_Day(string pstrCustomer, string PalletList, long LotID) {
            return base.Channel.HANWHA_EDIReport_Day(pstrCustomer, PalletList, LotID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HANWHA_EDIReport_DayAsync(string pstrCustomer, string PalletList, long LotID) {
            return base.Channel.HANWHA_EDIReport_DayAsync(pstrCustomer, PalletList, LotID);
        }
        
        public System.Data.DataSet HANWHA_ProductionEDIReport_Day(string pstrCustomer, string pstrSourceFileName, string pstrSourcePath) {
            return base.Channel.HANWHA_ProductionEDIReport_Day(pstrCustomer, pstrSourceFileName, pstrSourcePath);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HANWHA_ProductionEDIReport_DayAsync(string pstrCustomer, string pstrSourceFileName, string pstrSourcePath) {
            return base.Channel.HANWHA_ProductionEDIReport_DayAsync(pstrCustomer, pstrSourceFileName, pstrSourcePath);
        }
        
        public System.Data.DataSet GetBoxContentsWithMeasuredData(string pCustomer, string pBoxNo, string pMeasuredLabel) {
            return base.Channel.GetBoxContentsWithMeasuredData(pCustomer, pBoxNo, pMeasuredLabel);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBoxContentsWithMeasuredDataAsync(string pCustomer, string pBoxNo, string pMeasuredLabel) {
            return base.Channel.GetBoxContentsWithMeasuredDataAsync(pCustomer, pBoxNo, pMeasuredLabel);
        }
        
        public System.Data.DataSet RENESOLA_EDIReport_Day(string pstrCustomer, string BoxesList, int LotID) {
            return base.Channel.RENESOLA_EDIReport_Day(pstrCustomer, BoxesList, LotID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> RENESOLA_EDIReport_DayAsync(string pstrCustomer, string BoxesList, int LotID) {
            return base.Channel.RENESOLA_EDIReport_DayAsync(pstrCustomer, BoxesList, LotID);
        }
        
        public System.Data.DataSet GetBoardHeader(string CustomerName, string SerialNumber) {
            return base.Channel.GetBoardHeader(CustomerName, SerialNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBoardHeaderAsync(string CustomerName, string SerialNumber) {
            return base.Channel.GetBoardHeaderAsync(CustomerName, SerialNumber);
        }
        
        public System.Data.DataSet VerifySetupSheetDS(string AssemblyID, string RouteStepID, string EquipmentID, string SetupType) {
            return base.Channel.VerifySetupSheetDS(AssemblyID, RouteStepID, EquipmentID, SetupType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> VerifySetupSheetDSAsync(string AssemblyID, string RouteStepID, string EquipmentID, string SetupType) {
            return base.Channel.VerifySetupSheetDSAsync(AssemblyID, RouteStepID, EquipmentID, SetupType);
        }
        
        public string VerifySetupSheet(int AssemblyID, int RouteStepID, int EquipmentID, int SetupType) {
            return base.Channel.VerifySetupSheet(AssemblyID, RouteStepID, EquipmentID, SetupType);
        }
        
        public System.Threading.Tasks.Task<string> VerifySetupSheetAsync(int AssemblyID, int RouteStepID, int EquipmentID, int SetupType) {
            return base.Channel.VerifySetupSheetAsync(AssemblyID, RouteStepID, EquipmentID, SetupType);
        }
        
        public System.Data.DataSet GetGRNData(string GRNNumber) {
            return base.Channel.GetGRNData(GRNNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetGRNDataAsync(string GRNNumber) {
            return base.Channel.GetGRNDataAsync(GRNNumber);
        }
        
        public int GetQtyByBatchRouteStep(string BatchNumber, string RouteStepName) {
            return base.Channel.GetQtyByBatchRouteStep(BatchNumber, RouteStepName);
        }
        
        public System.Threading.Tasks.Task<int> GetQtyByBatchRouteStepAsync(string BatchNumber, string RouteStepName) {
            return base.Channel.GetQtyByBatchRouteStepAsync(BatchNumber, RouteStepName);
        }
        
        public int GetQtyByBatchRouteStepSum(string BatchNumber, string RouteStepName) {
            return base.Channel.GetQtyByBatchRouteStepSum(BatchNumber, RouteStepName);
        }
        
        public System.Threading.Tasks.Task<int> GetQtyByBatchRouteStepSumAsync(string BatchNumber, string RouteStepName) {
            return base.Channel.GetQtyByBatchRouteStepSumAsync(BatchNumber, RouteStepName);
        }
        
        public System.Data.DataSet ListCRDMaterials(int AssemblyID) {
            return base.Channel.ListCRDMaterials(AssemblyID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListCRDMaterialsAsync(int AssemblyID) {
            return base.Channel.ListCRDMaterialsAsync(AssemblyID);
        }
        
        public System.Data.DataSet ListNotFullyBoxes(string pCustomer, string pAssemblyNo, string pAssemblyRev, string pFullPathFile) {
            return base.Channel.ListNotFullyBoxes(pCustomer, pAssemblyNo, pAssemblyRev, pFullPathFile);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListNotFullyBoxesAsync(string pCustomer, string pAssemblyNo, string pAssemblyRev, string pFullPathFile) {
            return base.Channel.ListNotFullyBoxesAsync(pCustomer, pAssemblyNo, pAssemblyRev, pFullPathFile);
        }
        
        public System.Data.DataSet ListBoxLineNumbers(string pCustomer, string pBoxNo, string pFullPathFile) {
            return base.Channel.ListBoxLineNumbers(pCustomer, pBoxNo, pFullPathFile);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListBoxLineNumbersAsync(string pCustomer, string pBoxNo, string pFullPathFile) {
            return base.Channel.ListBoxLineNumbersAsync(pCustomer, pBoxNo, pFullPathFile);
        }
        
        public System.Data.DataSet ListPanelsBoards(int pCustomerID, string pSerialNo) {
            return base.Channel.ListPanelsBoards(pCustomerID, pSerialNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListPanelsBoardsAsync(int pCustomerID, string pSerialNo) {
            return base.Channel.ListPanelsBoardsAsync(pCustomerID, pSerialNo);
        }
        
        public System.Data.DataSet GetCustomerData(string pCustomer) {
            return base.Channel.GetCustomerData(pCustomer);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDataAsync(string pCustomer) {
            return base.Channel.GetCustomerDataAsync(pCustomer);
        }
        
        public System.Data.DataSet ProcessVerify(string pCustomer, string pSerialNumber, string pCheckPoint) {
            return base.Channel.ProcessVerify(pCustomer, pSerialNumber, pCheckPoint);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ProcessVerifyAsync(string pCustomer, string pSerialNumber, string pCheckPoint) {
            return base.Channel.ProcessVerifyAsync(pCustomer, pSerialNumber, pCheckPoint);
        }
        
        public System.Data.DataSet ListUsersByGroup(string pGroupName, string pFullPathFile) {
            return base.Channel.ListUsersByGroup(pGroupName, pFullPathFile);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListUsersByGroupAsync(string pGroupName, string pFullPathFile) {
            return base.Channel.ListUsersByGroupAsync(pGroupName, pFullPathFile);
        }
        
        public string CreateSerialNumber(int pCustomerID, string pSerialNumberName, string pSerialQuantity, string pAssemblyID, string pSerialSeparator, string pTestOnly) {
            return base.Channel.CreateSerialNumber(pCustomerID, pSerialNumberName, pSerialQuantity, pAssemblyID, pSerialSeparator, pTestOnly);
        }
        
        public System.Threading.Tasks.Task<string> CreateSerialNumberAsync(int pCustomerID, string pSerialNumberName, string pSerialQuantity, string pAssemblyID, string pSerialSeparator, string pTestOnly) {
            return base.Channel.CreateSerialNumberAsync(pCustomerID, pSerialNumberName, pSerialQuantity, pAssemblyID, pSerialSeparator, pTestOnly);
        }
        
        public System.Data.DataSet GetPalletBoxesContents(int pCustomerID, string PalletNumber) {
            return base.Channel.GetPalletBoxesContents(pCustomerID, PalletNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPalletBoxesContentsAsync(int pCustomerID, string PalletNumber) {
            return base.Channel.GetPalletBoxesContentsAsync(pCustomerID, PalletNumber);
        }
        
        public string GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<string> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public string CheckSN(string Customer, string Assembly_NR, string Assembly_REV, string SerialNumber) {
            return base.Channel.CheckSN(Customer, Assembly_NR, Assembly_REV, SerialNumber);
        }
        
        public System.Threading.Tasks.Task<string> CheckSNAsync(string Customer, string Assembly_NR, string Assembly_REV, string SerialNumber) {
            return base.Channel.CheckSNAsync(Customer, Assembly_NR, Assembly_REV, SerialNumber);
        }
        
        public string GetLastAssemblyIDByRouteStep(string pstrRouteStepID) {
            return base.Channel.GetLastAssemblyIDByRouteStep(pstrRouteStepID);
        }
        
        public System.Threading.Tasks.Task<string> GetLastAssemblyIDByRouteStepAsync(string pstrRouteStepID) {
            return base.Channel.GetLastAssemblyIDByRouteStepAsync(pstrRouteStepID);
        }
        
        public string GetLastTest(string SerialNumber) {
            return base.Channel.GetLastTest(SerialNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetLastTestAsync(string SerialNumber) {
            return base.Channel.GetLastTestAsync(SerialNumber);
        }
        
        public System.Data.DataSet GetLastTestData(string pSerialNumber, string pServerName) {
            return base.Channel.GetLastTestData(pSerialNumber, pServerName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLastTestDataAsync(string pSerialNumber, string pServerName) {
            return base.Channel.GetLastTestDataAsync(pSerialNumber, pServerName);
        }
        
        public string GetDateTimeFromDataBase() {
            return base.Channel.GetDateTimeFromDataBase();
        }
        
        public System.Threading.Tasks.Task<string> GetDateTimeFromDataBaseAsync() {
            return base.Channel.GetDateTimeFromDataBaseAsync();
        }
        
        public System.Data.DataSet GetTestHistoryByDateTime(string pCustomerID, string pSerialNumber, string pFromDate, string pToDate, string pRouteStepIDList, string pServerName) {
            return base.Channel.GetTestHistoryByDateTime(pCustomerID, pSerialNumber, pFromDate, pToDate, pRouteStepIDList, pServerName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTestHistoryByDateTimeAsync(string pCustomerID, string pSerialNumber, string pFromDate, string pToDate, string pRouteStepIDList, string pServerName) {
            return base.Channel.GetTestHistoryByDateTimeAsync(pCustomerID, pSerialNumber, pFromDate, pToDate, pRouteStepIDList, pServerName);
        }
        
        public System.Data.DataSet GetDataLabelsBySerialNo(string pCustomerName, string pSerialNumber, string pDataType) {
            return base.Channel.GetDataLabelsBySerialNo(pCustomerName, pSerialNumber, pDataType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDataLabelsBySerialNoAsync(string pCustomerName, string pSerialNumber, string pDataType) {
            return base.Channel.GetDataLabelsBySerialNoAsync(pCustomerName, pSerialNumber, pDataType);
        }
        
        public System.Data.DataSet GetTestHistory(string pCustomerName, string pSerialNumber, string pTestList) {
            return base.Channel.GetTestHistory(pCustomerName, pSerialNumber, pTestList);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTestHistoryAsync(string pCustomerName, string pSerialNumber, string pTestList) {
            return base.Channel.GetTestHistoryAsync(pCustomerName, pSerialNumber, pTestList);
        }
        
        public System.Data.DataSet GetTestsBySerialNo(string pSerialNumber) {
            return base.Channel.GetTestsBySerialNo(pSerialNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTestsBySerialNoAsync(string pSerialNumber) {
            return base.Channel.GetTestsBySerialNoAsync(pSerialNumber);
        }
        
        public System.Data.DataSet GetBoardHistoryDS(string CustomerName, string pstrSerialNo) {
            return base.Channel.GetBoardHistoryDS(CustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBoardHistoryDSAsync(string CustomerName, string pstrSerialNo) {
            return base.Channel.GetBoardHistoryDSAsync(CustomerName, pstrSerialNo);
        }
        
        public System.Data.DataSet GetHistoryByWipsDS(string pWipsList) {
            return base.Channel.GetHistoryByWipsDS(pWipsList);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHistoryByWipsDSAsync(string pWipsList) {
            return base.Channel.GetHistoryByWipsDSAsync(pWipsList);
        }
        
        public string CheckSerialNumberByCheckpoint(string pCustomer, string pCheckPoint, string pSerialNo) {
            return base.Channel.CheckSerialNumberByCheckpoint(pCustomer, pCheckPoint, pSerialNo);
        }
        
        public System.Threading.Tasks.Task<string> CheckSerialNumberByCheckpointAsync(string pCustomer, string pCheckPoint, string pSerialNo) {
            return base.Channel.CheckSerialNumberByCheckpointAsync(pCustomer, pCheckPoint, pSerialNo);
        }
        
        public string Service_Status(int sec) {
            return base.Channel.Service_Status(sec);
        }
        
        public System.Threading.Tasks.Task<string> Service_StatusAsync(int sec) {
            return base.Channel.Service_StatusAsync(sec);
        }
        
        public string[] Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string[]> TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public string[] GetParserData(string CustomerName, string pstrSerialNo, string pSep) {
            return base.Channel.GetParserData(CustomerName, pstrSerialNo, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetParserDataAsync(string CustomerName, string pstrSerialNo, string pSep) {
            return base.Channel.GetParserDataAsync(CustomerName, pstrSerialNo, pSep);
        }
        
        public string GetFamilyByAssemblyID(string pstrAssemblyID, string pSep) {
            return base.Channel.GetFamilyByAssemblyID(pstrAssemblyID, pSep);
        }
        
        public System.Threading.Tasks.Task<string> GetFamilyByAssemblyIDAsync(string pstrAssemblyID, string pSep) {
            return base.Channel.GetFamilyByAssemblyIDAsync(pstrAssemblyID, pSep);
        }
        
        public string[] GetFamilyByCustomer(string pstrCustomerText, string pSep) {
            return base.Channel.GetFamilyByCustomer(pstrCustomerText, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetFamilyByCustomerAsync(string pstrCustomerText, string pSep) {
            return base.Channel.GetFamilyByCustomerAsync(pstrCustomerText, pSep);
        }
        
        public string CheckAnalyze(string pstrSerialNo, string pSep, string CustomerName) {
            return base.Channel.CheckAnalyze(pstrSerialNo, pSep, CustomerName);
        }
        
        public System.Threading.Tasks.Task<string> CheckAnalyzeAsync(string pstrSerialNo, string pSep, string CustomerName) {
            return base.Channel.CheckAnalyzeAsync(pstrSerialNo, pSep, CustomerName);
        }
        
        public string[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public string[] GetRoutesByMA(string MA_ID) {
            return base.Channel.GetRoutesByMA(MA_ID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetRoutesByMAAsync(string MA_ID) {
            return base.Channel.GetRoutesByMAAsync(MA_ID);
        }
        
        public System.Data.DataSet GetAssemblyData(string pCustomer, string pAssemblylNo, string pAssemblyRev) {
            return base.Channel.GetAssemblyData(pCustomer, pAssemblylNo, pAssemblyRev);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAssemblyDataAsync(string pCustomer, string pAssemblylNo, string pAssemblyRev) {
            return base.Channel.GetAssemblyDataAsync(pCustomer, pAssemblylNo, pAssemblyRev);
        }
        
        public System.Data.DataSet GetEquipmentList(string pCustomerName, string pCommonName) {
            return base.Channel.GetEquipmentList(pCustomerName, pCommonName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEquipmentListAsync(string pCustomerName, string pCommonName) {
            return base.Channel.GetEquipmentListAsync(pCustomerName, pCommonName);
        }
        
        public System.Data.DataSet GetRouteStepData(string pRouteStepID) {
            return base.Channel.GetRouteStepData(pRouteStepID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRouteStepDataAsync(string pRouteStepID) {
            return base.Channel.GetRouteStepDataAsync(pRouteStepID);
        }
        
        public System.Data.DataSet GetAssembliesByRouteDS(string RouteID) {
            return base.Channel.GetAssembliesByRouteDS(RouteID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAssembliesByRouteDSAsync(string RouteID) {
            return base.Channel.GetAssembliesByRouteDSAsync(RouteID);
        }
        
        public string[] GetAssembliesByRoute(string RouteID) {
            return base.Channel.GetAssembliesByRoute(RouteID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAssembliesByRouteAsync(string RouteID) {
            return base.Channel.GetAssembliesByRouteAsync(RouteID);
        }
        
        public string[] GetAssembliesByRouteByCustomer(string RouteID, string CustomerName) {
            return base.Channel.GetAssembliesByRouteByCustomer(RouteID, CustomerName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAssembliesByRouteByCustomerAsync(string RouteID, string CustomerName) {
            return base.Channel.GetAssembliesByRouteByCustomerAsync(RouteID, CustomerName);
        }
        
        public string[] GetEquipmentByRouteStep(string RouteStepID) {
            return base.Channel.GetEquipmentByRouteStep(RouteStepID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetEquipmentByRouteStepAsync(string RouteStepID) {
            return base.Channel.GetEquipmentByRouteStepAsync(RouteStepID);
        }
        
        public string[] GetRouteStepsByRoute(string RouteID) {
            return base.Channel.GetRouteStepsByRoute(RouteID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetRouteStepsByRouteAsync(string RouteID) {
            return base.Channel.GetRouteStepsByRouteAsync(RouteID);
        }
        
        public System.Data.DataSet GetEquipmentData(string pEquipmentName) {
            return base.Channel.GetEquipmentData(pEquipmentName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEquipmentDataAsync(string pEquipmentName) {
            return base.Channel.GetEquipmentDataAsync(pEquipmentName);
        }
        
        public string[] GetSerialNoByLinkedMaterials(string pstrCustomer, string pLinkObject, string pLinkedNumber, int pLinkUnlink) {
            return base.Channel.GetSerialNoByLinkedMaterials(pstrCustomer, pLinkObject, pLinkedNumber, pLinkUnlink);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSerialNoByLinkedMaterialsAsync(string pstrCustomer, string pLinkObject, string pLinkedNumber, int pLinkUnlink) {
            return base.Channel.GetSerialNoByLinkedMaterialsAsync(pstrCustomer, pLinkObject, pLinkedNumber, pLinkUnlink);
        }
        
        public string[] GetEPSLinkedSerialNo(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetEPSLinkedSerialNo(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetEPSLinkedSerialNoAsync(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetEPSLinkedSerialNoAsync(pCustomerName, pstrSerialNo);
        }
        
        public string GetLinkedValue(string pstrCustomer, string pstrSerialNo, string pstrLinkObject) {
            return base.Channel.GetLinkedValue(pstrCustomer, pstrSerialNo, pstrLinkObject);
        }
        
        public System.Threading.Tasks.Task<string> GetLinkedValueAsync(string pstrCustomer, string pstrSerialNo, string pstrLinkObject) {
            return base.Channel.GetLinkedValueAsync(pstrCustomer, pstrSerialNo, pstrLinkObject);
        }
        
        public System.Data.DataSet GetLinkedValueDS(string pstrCustomer, string pstrSerialNo, string pstrLinkObject) {
            return base.Channel.GetLinkedValueDS(pstrCustomer, pstrSerialNo, pstrLinkObject);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLinkedValueDSAsync(string pstrCustomer, string pstrSerialNo, string pstrLinkObject) {
            return base.Channel.GetLinkedValueDSAsync(pstrCustomer, pstrSerialNo, pstrLinkObject);
        }
        
        public string[] GetLinkedMaterials(string pstrCustomer, string pstrSerialNo) {
            return base.Channel.GetLinkedMaterials(pstrCustomer, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetLinkedMaterialsAsync(string pstrCustomer, string pstrSerialNo) {
            return base.Channel.GetLinkedMaterialsAsync(pstrCustomer, pstrSerialNo);
        }
        
        public string GetSerialNoByShipOrder(string pstrCustomer, string pstrOrderNo, string pSep) {
            return base.Channel.GetSerialNoByShipOrder(pstrCustomer, pstrOrderNo, pSep);
        }
        
        public System.Threading.Tasks.Task<string> GetSerialNoByShipOrderAsync(string pstrCustomer, string pstrOrderNo, string pSep) {
            return base.Channel.GetSerialNoByShipOrderAsync(pstrCustomer, pstrOrderNo, pSep);
        }
        
        public string GetSerialNoByBox(string pstrCustomer, string pstrBoxNo, string pSep) {
            return base.Channel.GetSerialNoByBox(pstrCustomer, pstrBoxNo, pSep);
        }
        
        public System.Threading.Tasks.Task<string> GetSerialNoByBoxAsync(string pstrCustomer, string pstrBoxNo, string pSep) {
            return base.Channel.GetSerialNoByBoxAsync(pstrCustomer, pstrBoxNo, pSep);
        }
        
        public string[] GetSerialNoForBatch(string pstrBatchNo) {
            return base.Channel.GetSerialNoForBatch(pstrBatchNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSerialNoForBatchAsync(string pstrBatchNo) {
            return base.Channel.GetSerialNoForBatchAsync(pstrBatchNo);
        }
        
        public System.Data.DataSet GetSerialNoForBatchDS(string pstrBatchNo, string pMesRaportowy, string pOutputFile) {
            return base.Channel.GetSerialNoForBatchDS(pstrBatchNo, pMesRaportowy, pOutputFile);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSerialNoForBatchDSAsync(string pstrBatchNo, string pMesRaportowy, string pOutputFile) {
            return base.Channel.GetSerialNoForBatchDSAsync(pstrBatchNo, pMesRaportowy, pOutputFile);
        }
        
        public string GetWipCountByFamilyByRouteStep(string FamilyID, string RouteStepID, string pDateFrom, string pDateTo) {
            return base.Channel.GetWipCountByFamilyByRouteStep(FamilyID, RouteStepID, pDateFrom, pDateTo);
        }
        
        public System.Threading.Tasks.Task<string> GetWipCountByFamilyByRouteStepAsync(string FamilyID, string RouteStepID, string pDateFrom, string pDateTo) {
            return base.Channel.GetWipCountByFamilyByRouteStepAsync(FamilyID, RouteStepID, pDateFrom, pDateTo);
        }
        
        public string GetCParamByBatchNo(string BatchNo) {
            return base.Channel.GetCParamByBatchNo(BatchNo);
        }
        
        public System.Threading.Tasks.Task<string> GetCParamByBatchNoAsync(string BatchNo) {
            return base.Channel.GetCParamByBatchNoAsync(BatchNo);
        }
        
        public string GetAssemblyNo(string CustomerName, string pstrSerialNo) {
            return base.Channel.GetAssemblyNo(CustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string> GetAssemblyNoAsync(string CustomerName, string pstrSerialNo) {
            return base.Channel.GetAssemblyNoAsync(CustomerName, pstrSerialNo);
        }
        
        public string GetAssemblyProperty(string pAssemblyNo, string pAssemblyRev, string pPropertyKey) {
            return base.Channel.GetAssemblyProperty(pAssemblyNo, pAssemblyRev, pPropertyKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAssemblyPropertyAsync(string pAssemblyNo, string pAssemblyRev, string pPropertyKey) {
            return base.Channel.GetAssemblyPropertyAsync(pAssemblyNo, pAssemblyRev, pPropertyKey);
        }
        
        public string GetBatchBySerialNo(string SerialNo, string Customer) {
            return base.Channel.GetBatchBySerialNo(SerialNo, Customer);
        }
        
        public System.Threading.Tasks.Task<string> GetBatchBySerialNoAsync(string SerialNo, string Customer) {
            return base.Channel.GetBatchBySerialNoAsync(SerialNo, Customer);
        }
        
        public string GetWipCountByAssemblyByRouteStep(string AssemblyID, string RouteStepID, string pDateFrom, string pDateTo, string pFirstEvent) {
            return base.Channel.GetWipCountByAssemblyByRouteStep(AssemblyID, RouteStepID, pDateFrom, pDateTo, pFirstEvent);
        }
        
        public System.Threading.Tasks.Task<string> GetWipCountByAssemblyByRouteStepAsync(string AssemblyID, string RouteStepID, string pDateFrom, string pDateTo, string pFirstEvent) {
            return base.Channel.GetWipCountByAssemblyByRouteStepAsync(AssemblyID, RouteStepID, pDateFrom, pDateTo, pFirstEvent);
        }
        
        public string[] GetMAbyCustomer(string CustomerName) {
            return base.Channel.GetMAbyCustomer(CustomerName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMAbyCustomerAsync(string CustomerName) {
            return base.Channel.GetMAbyCustomerAsync(CustomerName);
        }
        
        public string[] GetAnalysisData(string pCustomer, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep) {
            return base.Channel.GetAnalysisData(pCustomer, pstrSerialNo, pstrEquipmentName, pstrTestDate, pstrQtyRec, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAnalysisDataAsync(string pCustomer, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep) {
            return base.Channel.GetAnalysisDataAsync(pCustomer, pstrSerialNo, pstrEquipmentName, pstrTestDate, pstrQtyRec, pSep);
        }
        
        public string[] GetMeasuredData(string CustomerName, string pstrSerialNo, string pstrDataLabel, string pSep) {
            return base.Channel.GetMeasuredData(CustomerName, pstrSerialNo, pstrDataLabel, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMeasuredDataAsync(string CustomerName, string pstrSerialNo, string pstrDataLabel, string pSep) {
            return base.Channel.GetMeasuredDataAsync(CustomerName, pstrSerialNo, pstrDataLabel, pSep);
        }
        
        public string[] GetMeasuredDataBySerialNo(string pCustomerName, string pstrSerialNo, string pstrDataLabel, string pSep) {
            return base.Channel.GetMeasuredDataBySerialNo(pCustomerName, pstrSerialNo, pstrDataLabel, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMeasuredDataBySerialNoAsync(string pCustomerName, string pstrSerialNo, string pstrDataLabel, string pSep) {
            return base.Channel.GetMeasuredDataBySerialNoAsync(pCustomerName, pstrSerialNo, pstrDataLabel, pSep);
        }
        
        public string[] GetBoardAnalysis(string CustomerName, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep) {
            return base.Channel.GetBoardAnalysis(CustomerName, pstrSerialNo, pstrEquipmentName, pstrTestDate, pstrQtyRec, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBoardAnalysisAsync(string CustomerName, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep) {
            return base.Channel.GetBoardAnalysisAsync(CustomerName, pstrSerialNo, pstrEquipmentName, pstrTestDate, pstrQtyRec, pSep);
        }
        
        public string GetPalletContents(string pCustomer, string pstrDateFrom, string pstrDateTo, string pPalletStatus, string pAllEvents, string pShowBoards, string pstrFolderOut, string pSaveAs, string pFileExtension) {
            return base.Channel.GetPalletContents(pCustomer, pstrDateFrom, pstrDateTo, pPalletStatus, pAllEvents, pShowBoards, pstrFolderOut, pSaveAs, pFileExtension);
        }
        
        public System.Threading.Tasks.Task<string> GetPalletContentsAsync(string pCustomer, string pstrDateFrom, string pstrDateTo, string pPalletStatus, string pAllEvents, string pShowBoards, string pstrFolderOut, string pSaveAs, string pFileExtension) {
            return base.Channel.GetPalletContentsAsync(pCustomer, pstrDateFrom, pstrDateTo, pPalletStatus, pAllEvents, pShowBoards, pstrFolderOut, pSaveAs, pFileExtension);
        }
        
        public string CheckPalletByMeasuredDataByBatch(string pCustomer, string pPalletNo) {
            return base.Channel.CheckPalletByMeasuredDataByBatch(pCustomer, pPalletNo);
        }
        
        public System.Threading.Tasks.Task<string> CheckPalletByMeasuredDataByBatchAsync(string pCustomer, string pPalletNo) {
            return base.Channel.CheckPalletByMeasuredDataByBatchAsync(pCustomer, pPalletNo);
        }
        
        public bool CheckPalletByMeasuredData(string pCustomer, string pPalletNo) {
            return base.Channel.CheckPalletByMeasuredData(pCustomer, pPalletNo);
        }
        
        public System.Threading.Tasks.Task<bool> CheckPalletByMeasuredDataAsync(string pCustomer, string pPalletNo) {
            return base.Channel.CheckPalletByMeasuredDataAsync(pCustomer, pPalletNo);
        }
        
        public string CustomerLineStepReport(string pCustomer, string pFactory, string pstrManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pReportServer, string pSaveAs, string pStatus) {
            return base.Channel.CustomerLineStepReport(pCustomer, pFactory, pstrManArea, pstrRoute, pstrStep, pstrDateFrom, pstrDateTo, pstrFolderOut, pReportServer, pSaveAs, pStatus);
        }
        
        public System.Threading.Tasks.Task<string> CustomerLineStepReportAsync(string pCustomer, string pFactory, string pstrManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pReportServer, string pSaveAs, string pStatus) {
            return base.Channel.CustomerLineStepReportAsync(pCustomer, pFactory, pstrManArea, pstrRoute, pstrStep, pstrDateFrom, pstrDateTo, pstrFolderOut, pReportServer, pSaveAs, pStatus);
        }
        
        public string GetPackedData(string pstrCustomer, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pSaveAs) {
            return base.Channel.GetPackedData(pstrCustomer, pstrDateFrom, pstrDateTo, pstrFolderOut, pSaveAs);
        }
        
        public System.Threading.Tasks.Task<string> GetPackedDataAsync(string pstrCustomer, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pSaveAs) {
            return base.Channel.GetPackedDataAsync(pstrCustomer, pstrDateFrom, pstrDateTo, pstrFolderOut, pSaveAs);
        }
        
        public string WipCountByStepBySerialNo(string pstrManArea, string pstrRoute, string pstrStep, string pstrSerialNo, string pProductionServer) {
            return base.Channel.WipCountByStepBySerialNo(pstrManArea, pstrRoute, pstrStep, pstrSerialNo, pProductionServer);
        }
        
        public System.Threading.Tasks.Task<string> WipCountByStepBySerialNoAsync(string pstrManArea, string pstrRoute, string pstrStep, string pstrSerialNo, string pProductionServer) {
            return base.Channel.WipCountByStepBySerialNoAsync(pstrManArea, pstrRoute, pstrStep, pstrSerialNo, pProductionServer);
        }
        
        public string CreateBackFlashSAP(string CustomerName, string pstrManArea, string pstrRoute, string pstrEquipment, string pstrFamily, string pstrDateFrom, string pstrDateTo, string pstrFolderOut) {
            return base.Channel.CreateBackFlashSAP(CustomerName, pstrManArea, pstrRoute, pstrEquipment, pstrFamily, pstrDateFrom, pstrDateTo, pstrFolderOut);
        }
        
        public System.Threading.Tasks.Task<string> CreateBackFlashSAPAsync(string CustomerName, string pstrManArea, string pstrRoute, string pstrEquipment, string pstrFamily, string pstrDateFrom, string pstrDateTo, string pstrFolderOut) {
            return base.Channel.CreateBackFlashSAPAsync(CustomerName, pstrManArea, pstrRoute, pstrEquipment, pstrFamily, pstrDateFrom, pstrDateTo, pstrFolderOut);
        }
        
        public string GetListChangedBatch(System.DateTime pDateFrom, string pExcludeCustomer) {
            return base.Channel.GetListChangedBatch(pDateFrom, pExcludeCustomer);
        }
        
        public System.Threading.Tasks.Task<string> GetListChangedBatchAsync(System.DateTime pDateFrom, string pExcludeCustomer) {
            return base.Channel.GetListChangedBatchAsync(pDateFrom, pExcludeCustomer);
        }
        
        public string[] GetFirstTest(string pstrSerialNo) {
            return base.Channel.GetFirstTest(pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetFirstTestAsync(string pstrSerialNo) {
            return base.Channel.GetFirstTestAsync(pstrSerialNo);
        }
        
        public string[] GetBoardData(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetBoardData(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBoardDataAsync(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetBoardDataAsync(pCustomerName, pstrSerialNo);
        }
        
        public System.Data.DataSet GetAssemblyDataByBoardDS(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetAssemblyDataByBoardDS(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAssemblyDataByBoardDSAsync(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetAssemblyDataByBoardDSAsync(pCustomerName, pstrSerialNo);
        }
        
        public System.Data.DataSet GetSerialNoByLinkedData(int customerId, string dateFromString, string dateToString, int linkObjectId, string linkedValue, int uniqueLink, int showUnlinkedSn) {
            return base.Channel.GetSerialNoByLinkedData(customerId, dateFromString, dateToString, linkObjectId, linkedValue, uniqueLink, showUnlinkedSn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSerialNoByLinkedDataAsync(int customerId, string dateFromString, string dateToString, int linkObjectId, string linkedValue, int uniqueLink, int showUnlinkedSn) {
            return base.Channel.GetSerialNoByLinkedDataAsync(customerId, dateFromString, dateToString, linkObjectId, linkedValue, uniqueLink, showUnlinkedSn);
        }
        
        public System.Data.DataSet GetLinkObjectDS(string customer, string linkObject) {
            return base.Channel.GetLinkObjectDS(customer, linkObject);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLinkObjectDSAsync(string customer, string linkObject) {
            return base.Channel.GetLinkObjectDSAsync(customer, linkObject);
        }
        
        public string[] GetBoardHistory(string CustomerName, string pstrSerialNo, string pSep) {
            return base.Channel.GetBoardHistory(CustomerName, pstrSerialNo, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBoardHistoryAsync(string CustomerName, string pstrSerialNo, string pSep) {
            return base.Channel.GetBoardHistoryAsync(CustomerName, pstrSerialNo, pSep);
        }
        
        public System.Data.DataSet GetBoxHeader(string pCustomerName, string pstrBoxNo) {
            return base.Channel.GetBoxHeader(pCustomerName, pstrBoxNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBoxHeaderAsync(string pCustomerName, string pstrBoxNo) {
            return base.Channel.GetBoxHeaderAsync(pCustomerName, pstrBoxNo);
        }
        
        public System.Data.DataSet GetLineStepReport(string pCustomer, string pFactory, string pManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pStatus, string pReportServer) {
            return base.Channel.GetLineStepReport(pCustomer, pFactory, pManArea, pstrRoute, pstrStep, pstrDateFrom, pstrDateTo, pStatus, pReportServer);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLineStepReportAsync(string pCustomer, string pFactory, string pManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pStatus, string pReportServer) {
            return base.Channel.GetLineStepReportAsync(pCustomer, pFactory, pManArea, pstrRoute, pstrStep, pstrDateFrom, pstrDateTo, pStatus, pReportServer);
        }
        
        public string GetBoxNumber(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetBoxNumber(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string> GetBoxNumberAsync(string pCustomerName, string pstrSerialNo) {
            return base.Channel.GetBoxNumberAsync(pCustomerName, pstrSerialNo);
        }
    }
}
